<?xml version='1.0' encoding='UTF-8'?>
<configuration>
	<springProperty name="logFile" source="log.file" />
	<springProperty name="rootlevel" source="log.level.root" />
	<springProperty name="mylevel" source="log.level.my" />
	<springProperty name="maxFileSize" source="log.maxsize" />
	<springProperty name="logHome" source="log.home" />

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d [%thread] %-5level %logger{50} -[%file:%line]- %msg%n
			</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<appender name="adminLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logHome}/${logFile}.log</file>
		<encoder>
			<pattern>%d [%thread] %-5level -[%file:%line]- %msg%n
			</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天分文件夹存放 ，并压缩 -->
			<fileNamePattern>${logHome}/%d{yyyy-MM-dd}/${logFile}_%i.log</fileNamePattern>
			<!-- 每个文件的最大值 10MB,超过则编号,生成新文件 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- 例如，假设每天滚动，且 maxHistory 是 7，则只 保留最近 7 天的归档文件，删除之前的文件。 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
	</appender>

	<appender name="errorLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logHome}/${logFile}_error.log</file>
		<encoder>
			<pattern>%d [%thread] %-5level %logger{36} -[%file:%line]- %msg%n
			</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天分文件夹存放 ，并压缩 -->
			<fileNamePattern>${logHome}/%d{yyyy-MM-dd}/${logFile}_error_%i.log</fileNamePattern>
			<!-- 每个文件的最大值 10MB,超过则编号,生成新文件 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- 例如，假设每天滚动，且 maxHistory 是 7，则只 保留最近 7 天的归档文件，删除之前的文件。 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>error</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="sqlLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logHome}/${logFile}_sql.log</file>
		<encoder>
			<pattern>%d [%thread] %msg%n
			</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天分文件夹存放 ，并压缩 -->
			<fileNamePattern>${logHome}/%d{yyyy-MM-dd}/${logFile}_sql_%i.log</fileNamePattern>
			<!-- 每个文件的最大值 10MB,超过则编号,生成新文件 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- 例如，假设每天滚动，且 maxHistory 是 7，则只 保留最近 7 天的归档文件，删除之前的文件。 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
	</appender>

	<logger name="adminLogger" level="${mylevel}" additivity="true">
		<appender-ref ref="adminLog" />
	</logger>

	<logger name="com.hfsy.module.dao" level="DEBUG" additivity="true">
		<appender-ref ref="sqlLog" />
	</logger>

	<root level="${rootlevel}">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="errorLog" />
	</root>

</configuration>
